[{"E:\\Serverless @2020\\AWS Coginto\\src\\index.js":"1","E:\\Serverless @2020\\AWS Coginto\\src\\Account.js":"2","E:\\Serverless @2020\\AWS Coginto\\src\\Routes.js":"3","E:\\Serverless @2020\\AWS Coginto\\src\\ForgotPass.js":"4","E:\\Serverless @2020\\AWS Coginto\\src\\Userpool.js":"5","E:\\Serverless @2020\\AWS Coginto\\src\\PrivateRoutes.js":"6","E:\\Serverless @2020\\AWS Coginto\\src\\SomeComp.js":"7","E:\\Serverless @2020\\AWS Coginto\\src\\App.js":"8","E:\\Serverless @2020\\AWS Coginto\\src\\Login.js":"9","E:\\Serverless @2020\\AWS Coginto\\src\\Signup.js":"10"},{"size":334,"mtime":1608873703668,"results":"11","hashOfConfig":"12"},{"size":2183,"mtime":1609599319007,"results":"13","hashOfConfig":"12"},{"size":659,"mtime":1608951814130,"results":"14","hashOfConfig":"12"},{"size":2291,"mtime":1608956295493,"results":"15","hashOfConfig":"12"},{"size":216,"mtime":1607952545626,"results":"16","hashOfConfig":"12"},{"size":981,"mtime":1609661569765,"results":"17","hashOfConfig":"12"},{"size":1022,"mtime":1609339969817,"results":"18","hashOfConfig":"12"},{"size":2603,"mtime":1609340530369,"results":"19","hashOfConfig":"12"},{"size":1752,"mtime":1609599358562,"results":"20","hashOfConfig":"12"},{"size":2591,"mtime":1610420744072,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"860hup",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\Serverless @2020\\AWS Coginto\\src\\index.js",[],["45","46"],"E:\\Serverless @2020\\AWS Coginto\\src\\Account.js",[],"E:\\Serverless @2020\\AWS Coginto\\src\\Routes.js",[],"E:\\Serverless @2020\\AWS Coginto\\src\\ForgotPass.js",[],"E:\\Serverless @2020\\AWS Coginto\\src\\Userpool.js",[],"E:\\Serverless @2020\\AWS Coginto\\src\\PrivateRoutes.js",[],"E:\\Serverless @2020\\AWS Coginto\\src\\SomeComp.js",[],"E:\\Serverless @2020\\AWS Coginto\\src\\App.js",["47","48"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport AWS from 'aws-sdk';\r\nimport { useCookies } from 'react-cookie';\r\nimport { AwsClient } from 'aws4fetch'\r\n\r\nconst App = () => {\r\n  const [cookie, setCookie] = useCookies();\r\n\r\n\r\n  const responseGoogle = (res) => {\r\n    if (res) {\r\n      const { profileObj } = res;\r\n      AWS.config.update({ region: 'ap-south-1' });\r\n      AWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n        IdentityPoolId: 'ap-south-1:4979d70f-ee73-4f5d-b057-5af093b65404', // I'Pool can be access from AWS Console......\r\n        Logins: {\r\n          'accounts.google.com': res.tokenObj.id_token // jwt token must be include.......\r\n        }\r\n      });\r\n      AWS.config.credentials.get(async function () {\r\n        console.log(AWS.config.credentials); // for logging purpose.......\r\n\r\n        const aws = new AwsClient({\r\n          service: 'execute-api',\r\n          region: 'ap-south-1',\r\n          // Required for getting Signature.........................\r\n          accessKeyId: AWS.config.credentials.accessKeyId,\r\n          secretAccessKey: AWS.config.credentials.secretAccessKey,\r\n          sessionToken: AWS.config.credentials.sessionToken\r\n        });\r\n        const url = 'https://rfc01kye8i.execute-api.ap-south-1.amazonaws.com/dev/create/';\r\n        const request = await aws.sign(url, {\r\n          method: 'POST',\r\n          body: JSON.stringify({ message: profileObj }), // must be stringify....(as body must be in string)\r\n          headers: {\r\n            'content-type': \"application/json\"\r\n          },\r\n        });\r\n\r\n        const response = await fetch(request)\r\n        console.log(await response.json()); // for verify the request...for success........\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return <section className='container text-center'>\r\n    <div className='row'>\r\n      <h1 className='text-center p-2 mt-5'>AWS Coginto Auth</h1>\r\n      <p className='text-center text-dark'>Hello</p>\r\n      <GoogleLogin\r\n        clientId=\"1072297356666-p6t99p967skoc6u6rmeipom2t89uhqjg.apps.googleusercontent.com\"\r\n        buttonText=\"Login\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={'single_host_origin'}\r\n      />,\r\n      <p className='h3'> <Link to='/man'>Click Man</Link></p>\r\n      <div className='col-md-6'>\r\n        <Signup />\r\n      </div>\r\n      <div className='col-md-6'>\r\n        <Login />\r\n      </div>\r\n    </div>\r\n  </section>\r\n}\r\n\r\nexport default App;\r\n","E:\\Serverless @2020\\AWS Coginto\\src\\Login.js",[],["49","50"],"E:\\Serverless @2020\\AWS Coginto\\src\\Signup.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":11,"column":10,"nodeType":"57","messageId":"58","endLine":11,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":11,"column":18,"nodeType":"57","messageId":"58","endLine":11,"endColumn":27},{"ruleId":"51","replacedBy":"60"},{"ruleId":"53","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'cookie' is assigned a value but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.",["62"],["63"],"no-global-assign","no-unsafe-negation"]